/*------------------------------------*\
    #FLEXBOX w/ BROWSER FALLBACKS
\*------------------------------------*/
@mixin flexbox {
  display: -webkit-box; // old
  display: -moz-box; // old
  display: -ms-flexbox; // ie
  display: -webkit-flex; // new
  display: flex; // new
}

@mixin flex-direction($direction) {
  @if $direction == column {
    -webkit-flex-direction: vertical;
       -moz-flex-direction: vertical;
        -ms-flex-direction: column;
    -webkit-flex-direction: column;
            flex-direction: column;
  }
  @else {
    -webkit-flex-direction: horizontal;
       -moz-flex-direction: horizontal;
        -ms-flex-direction: row;
    -webkit-flex-direction: row;
            flex-direction: row;
  }
}

@mixin flex-flow($values) {
  -webkit-flex-flow: $values;
     -moz-flex-flow: $values;
      -ms-flex-flow: $values;
          flex-flow: $values;
}

@mixin flex-wrap($wrap) {
  @if $wrap == wrap {
    flex-wrap: wrap;
  }
  @else {
    flex-wrap: nowrap;
  }
}

// The 'flex' shorthand - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
      	  -ms-flex: $values;
  	          flex: $values;
}

@mixin justify-content($value) {

  @if $value == "start" {
    justify-content: flex-start;
  } @else if $value == "end" {
      justify-content: flex-end;
  } @else if $value == "between" {
      justify-content: space-between;
  } @else if $value == "around" {
      justify-content: space-around;
  } @else if $value == "center" {
      justify-content: center;
  }
}

@mixin align-items($value) {

  @if $value == "start" {
    align-items: flex-start;
  } @else if $value == "end" {
    align-items: flex-end;
  } @else if $value == "center" {
    align-items: center;
  } @else if $value == "baseline" {
    align-items: baseline;
  } @else if $value == "stretch" {
    align-items: stretch;
  }
}
